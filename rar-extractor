#!/bin/bash

# In "Parent Folder" there are many folders each one contains rar files
# This script extracts each rar (contains a big file and other small ones)
# rename the biggest file using the folder'sname
# and move it to another directory

# Colors
C_BLK="\x1b[30;01m" # black
C_RED="\x1b[31;01m" # red
C_GRN="\x1b[32;01m" # green
C_YEL="\x1b[33;01m" # yellow
C_BLU="\x1b[34;01m" # blue
C_MAG="\x1b[35;01m" # magenta
C_CYN="\x1b[36;01m" # cyan
C_WHI="\x1b[37;01m" # white
C_END="\x1b[0m"     # Cancel

# print: [color string] | [string]
function print {
	echo -e " "$1$2$3$4$5$6$7$C_END
}

# New line
function newline {
	echo -e ""
}

function die {
	newline; exit;
}

# Show greetings
newline
print $C_BLU "-----------------------------------------------------------------------------"
print $C_BLU "- " $C_MAG "Rar Extractor. Version 1.0"
print $C_BLU "-----------------------------------------------------------------------------"
newline

# Check if parent directory exists
if [ ! -d "$parentDir" ]; then
	print $C_RED "Error! Directory doesn't exist: $parentDir"; die
fi


# ALWAYS check the exit status of 'cd', to avoid running commands
# in the wrong directory
cd "$parentDir" || exit

# any glob ending in '/' will only expand to directories
for dir in ./*/; do
  # trim the '/' from the end of the dir
  dir=${dir%/}

  printf "==Folder: %s\n" "$dir"
  # commands within (...) are run in a subshell. that means assignments
  # and changes in the working dir will not persist afterwards. I'm using
  # subshells, so I don't have to worry about finding my way back out
  (
    cd "$dir" || exit
    unrar x *.rar "$tempDir"
    (
      cd "$tempDir" || exit

      # this will safely get the size of the biggest filename, even if it
      # has newlines or any other special character in it
      {
        read -rd ' ' size
        IFS= read -rd '' big
      } < <(stat --printf='%s %n\0' ./* | sort -znr)

      # /msg greybot faq 100 for more info on string manipulations in bash
      ext=${big##*.}
      printf '==File: %s\n' "$destDir/$dir.$ext"

      mv "$big" "$destDir/$dir.$ext"
    )
  )
done

rm -f $tempDir
